# -*- coding: utf-8 -*-
"""Indicator Final Project Code

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PZ5tZN5iVnKI5QRE5VU4reOJBlnufhg6
"""

!pip install numpy
!pip install shapely
!pip install fiona
import pandas
!pip install pyproj
!pip install packaging
!pip install geopandas

# Commented out IPython magic to ensure Python compatibility.
from google.colab import drive
drive.mount('/content/drive')

#Accessing google drive
from google.colab import drive
drive.mount("/content/gdrive")

#Import the target folder
# %cd /content/gdrive/My Drive/Seoul_data

import matplotlib.pyplot as plt
import geopandas as gpd
import pandas as pd
from shapely.geometry import Polygon, LineString, Point

#-----------Hospital---------------
seoul_area = gpd.read_file('LARD_ADM_SECT_SGG_11.shp', encoding='cp949') #shape file so use gpd bc has geometry info
hospital = pd.read_csv('hospital count.csv', encoding='cp949', dtype=str) #csv file so don't need gpd, instead use pd aka panda

seoul_area.head()

hospital.head()

#name changing

seoul_area.loc[seoul_area['SGG_NM'] == '서울시노원구', 'SGG_NM'] = '노원구'
seoul_area.loc[seoul_area['SGG_NM'] == '서울시도봉구', 'SGG_NM'] = '도봉구'
seoul_area.loc[seoul_area['SGG_NM'] == '서울시성북구', 'SGG_NM'] = '성북구'



district_mapping = {
    'Gangnam-gu': '강남구',
    'Seocho-gu': '서초구',
    'Songpa-gu': '송파구',
    'Yeongdeungpo-gu': '영등포구',
    'Gangseo-gu': '강서구',
    'Mapo-gu': '마포구',
    'Gangdong-gu': '강동구',
    'Nowon-gu': '노원구',
    'Gwanak-gu': '관악구',
    'Dongdaemun-gu': '동대문구',
    'Eunpyeong-gu': '은평구',
    'Yangcheon-gu': '양천구',
    'Jongno-gu': '종로구',
    'Seongbuk-gu': '성북구',
    'Jung-gu': '중구',
    'Dongjak-gu': '동작구',
    'Gwangjin-gu': '광진구',
    'Guro-gu': '구로구',
    'Jungnang-gu': '중랑구',
    'Gangbuk-gu': '강북구',
    'Seodaemun-gu': '서대문구',
    'Seongdong-gu': '성동구',
    'Geumcheon-gu': '금천구',
    'Dobong-gu': '도봉구',
    'Yongsan-gu': '용산구'
}
hospital['District'] = hospital['District'].map(district_mapping)

hospital.rename(columns={"District": "SGG_NM"}, inplace=True)

print(hospital.head())

#change to numeric
hospital['Hospitals'] = pd.to_numeric(hospital['Hospitals'])

hospital.head()

#merge
merged_data = seoul_area.merge(hospital, on='SGG_NM', how='left')


print(merged_data.head())

#visualize

ax = merged_data.plot(column="Hospitals", cmap="Blues", figsize=(10,6), alpha=0.7, legend=True, edgecolor='black')


ax.set_title("Concentration of Hospital units", fontsize=20)


ax.set_axis_off()


plt.show()

#-------------Elderly Population--------------------------------------------
seoul_area = gpd.read_file('LARD_ADM_SECT_SGG_11.shp', encoding='cp949') #shape file so use gpd bc has geometry info
population = pd.read_csv('population.csv', dtype=str) #csv file so don't need gpd, instead use pd aka panda

seoul_area.head()

population["over 65"]=pd.to_numeric(population['over 65'])
population.head()

#merge
population.rename(columns={"District": "SGG_NM"}, inplace=True)
merged_seoul_data = seoul_area.merge(population, on='SGG_NM', how='left')

print(merged_seoul_data.head())

#visualize

ax = merged_seoul_data.plot(column='over 65', cmap='Greens', alpha=0.7, legend=True, figsize=(10, 6), edgecolor='black')

plt.title('Total Elderly Population', fontsize=20)

ax.set_axis_off()
plt.show()

#------------combination of Hospital and Elderly Population-----------------
seoul_area = gpd.read_file('LARD_ADM_SECT_SGG_11.shp', encoding='cp949') #shape file so use gpd bc has geometry info
hospital = pd.read_csv('hospital count.csv', encoding='cp949', dtype=str) #csv file so don't need gpd, instead use pd aka panda
population = pd.read_csv('population.csv', dtype=str) #csv file so don't need gpd, instead use pd aka panda

#change to numeric
hospital["Hospitals"] = pd.to_numeric(hospital['Hospitals'])
population["over 65"] = pd.to_numeric(population['over 65'])

hospital.head()

population.head()

#renaming
population.rename(columns={"District": "SGG_NM"}, inplace=True)

seoul_area.loc[seoul_area['SGG_NM'] == '서울시노원구', 'SGG_NM'] = '노원구'
seoul_area.loc[seoul_area['SGG_NM'] == '서울시도봉구', 'SGG_NM'] = '도봉구'
seoul_area.loc[seoul_area['SGG_NM'] == '서울시성북구', 'SGG_NM'] = '성북구'


district_mapping = {
    'Gangnam-gu': '강남구',
    'Seocho-gu': '서초구',
    'Songpa-gu': '송파구',
    'Yeongdeungpo-gu': '영등포구',
    'Gangseo-gu': '강서구',
    'Mapo-gu': '마포구',
    'Gangdong-gu': '강동구',
    'Nowon-gu': '노원구',
    'Gwanak-gu': '관악구',
    'Dongdaemun-gu': '동대문구',
    'Eunpyeong-gu': '은평구',
    'Yangcheon-gu': '양천구',
    'Jongno-gu': '종로구',
    'Seongbuk-gu': '성북구',
    'Jung-gu': '중구',
    'Dongjak-gu': '동작구',
    'Gwangjin-gu': '광진구',
    'Guro-gu': '구로구',
    'Jungnang-gu': '중랑구',
    'Gangbuk-gu': '강북구',
    'Seodaemun-gu': '서대문구',
    'Seongdong-gu': '성동구',
    'Geumcheon-gu': '금천구',
    'Dobong-gu': '도봉구',
    'Yongsan-gu': '용산구'
}
hospital['District'] = hospital['District'].map(district_mapping)

hospital.rename(columns={"District": "SGG_NM"}, inplace=True)

hospital.head()

population.head()

#merge
merge_per_capita = pd.merge(hospital, population, on='SGG_NM')
merge_per_capita.head()

#formula
merge_per_capita['Hospitals_per_capita']=merge_per_capita['Hospitals'] / merge_per_capita['over 65']
print(merge_per_capita)

seoul_merge_area=seoul_area.merge(merge_per_capita, on="SGG_NM", how='left')

#visualize
ax = seoul_merge_area.plot(column="Hospitals_per_capita", figsize=(10,6), alpha=0.8, legend=True, cmap='Reds', edgecolor='black')
plt.title('Number of Hospitals per Capita of Elderly Population', fontsize=15)

ax.set_axis_off()
plt.show()